{"version":3,"sources":["SoundButton.js","SectionCard.js","AboutInformation.js","App.js","reportWebVitals.js","index.js"],"names":["SoundButton","props","audio","Audio","src","style","marginLeft","onClick","play","catch","err","console","log","shape","audioTitle","SectionCard","title","config","sectionName","marginTop","marginRight","display","audios","map","directoryName","AboutInformation","height","href","App","useState","drawerVisible","setDrawerVisible","fileTree","setFileTree","Content","Layout","Header","Footer","toggleDrawer","useEffect","fetch","then","response","json","backIcon","MenuOutlined","extra","placement","icon","TranslationOutlined","GithubOutlined","onBack","prev","path","minHeight","sections","section","textAlign","HeartOutlined","visible","closable","onClose","type","block","to","orientation","target","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e13a52e0.chunk.js","sourcesContent":["import {Button} from \"antd\";\r\n\r\nexport default function SoundButton(props) {\r\n    const audio = new Audio(props.src);\r\n\r\n    const handleClick = () => {\r\n        audio.play().catch((err) => {\r\n            console.log(\"audio play err\", err)\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div style={{marginLeft: '5px'}}>\r\n            <Button onClick={handleClick} shape=\"round\">\r\n                {props.audioTitle}\r\n            </Button>\r\n        </div>\r\n    )\r\n}","import { Card } from \"antd\";\r\nimport SoundButton from \"./SoundButton\";\r\n\r\nexport default function SectionCard(props) {\r\n\r\n    const renderCard = () => {\r\n        return (\r\n            <div style={{display: 'flex'}}>\r\n                {\r\n                    props.config.audios.map((audio) =>\r\n                        <SoundButton audioTitle={audio.title} key={audio.title} src={'/assets/' + props.config.directoryName + '/' + audio.src}/>)\r\n                }\r\n            </div>\r\n\r\n        )\r\n\r\n    }\r\n\r\n    return (\r\n        <Card title={props.config.sectionName} style={{marginTop: '2vh', marginLeft: '2vw', marginRight: '2vw'}}>\r\n            {renderCard()}\r\n        </Card>\r\n    )\r\n}\r\n","import {Card, Divider} from 'antd'\r\n\r\nexport default function AboutInformation() {\r\n    return (\r\n        <Card style={{marginTop: '2vh', marginLeft: '2vw', marginRight: '2vw', height: '80vh'}}>\r\n            <h2>A-Soul 按钮</h2>\r\n            <p>A-Soul是乐华娱乐首个虚拟偶像企划，由五位小姐姐向晚，贝拉，珈乐，嘉然，乃琳组成。本项目收录了企划直播或视频作品中一些有趣的音频切片，供粉丝进行参考。</p>\r\n            <Divider />\r\n            <p>由asoul-button devTeam满怀爱意地采用Reactjs+antd开发，托管于Github Pages。</p>\r\n            <p>灵感来自<a href=\"https://github.com/LionelChen/imi-button\">imi-button</a>项目，按照GPLv3开源。</p>\r\n            <Divider />\r\n            <h3>想要添加音频？</h3>\r\n            <p>查看asoul-button的Github Pages仓库，\r\n                音频文件按照assets/directoryName/fileName.*的结构存储，\r\n                文件地址配置存储在config.json中。\r\n                如果想要添加一个类别，则在sections数组中添加一个新对象，\r\n                并注明其directoryName（目录名）和sectionName（实际在页面上显示的类别名），\r\n                然后在其audios数组中添加若干描述音频信息的对象。\r\n            </p>\r\n            <p>\r\n                audios数组中存储的对象需要注明两个属性：title和src。\r\n                title是音频在页面上对应按钮显示的名称，src是文件名。\r\n            </p>\r\n            <p>\r\n                添加完成后，你可以提交pull request。\r\n            </p>\r\n            <Divider />\r\n            <h3>想要贡献代码？</h3>\r\n            <p>查看asoul-button的源代码仓库，所有代码按照GPLv3开源。欢迎star，fork，提issue。</p>\r\n        </Card>\r\n    )\r\n}","import './App.css';\nimport { PageHeader, Button, Drawer, Tooltip, Divider, Layout } from \"antd\";\nimport { MenuOutlined, GithubOutlined, TranslationOutlined, HeartOutlined } from \"@ant-design/icons\";\nimport {useState, useEffect} from \"react\";\nimport SectionCard from \"./SectionCard\";\nimport AboutInformation from \"./AboutInformation\";\nimport {\n    BrowserRouter as Router,\n    Link,\n    Route,\n    Switch\n} from \"react-router-dom\";\n\n\nfunction App() {\n  const [drawerVisible, setDrawerVisible] = useState(false);\n  const [fileTree, setFileTree] = useState(null);\n  const {Header, Content, Footer} = Layout;\n\n  const handleMenu = () => {\n    setDrawerVisible((prev) => !prev);\n  }\n\n  const renderCards = () => {\n    return (\n        <div style={{minHeight: '720px'}}>\n           {\n            fileTree ? fileTree.sections.map((section) =>\n              <SectionCard config={section} />\n            ) : <div></div>\n           }\n        </div>\n    )\n  }\n\n  const toggleDrawer = () => {\n      setDrawerVisible(false)\n  }\n\n  useEffect(() => {\n      console.log(\"loading data\")\n      fetch('config.json').then((response) => {\n          console.log(response)\n          return response.json()\n      }).then((response) => {\n          console.log(response);\n          setFileTree(response);\n      }).catch((err) => {\n          console.log(err);\n      })\n  }, [])\n\n  return (\n      <Router>\n          <Layout>\n              <PageHeader\n                  backIcon={<MenuOutlined />}\n                  title=\"A-soul按钮\"\n                  extra={[\n                      <Tooltip placement=\"bottom\" title=\"罕见模式（暂未开放）\" key=\"language\">\n                          <Button shape=\"circle\" icon={<TranslationOutlined />} />\n                      </Tooltip>,\n                      <Tooltip placement=\"bottom\" title=\"开源仓库\" key=\"github\">\n                          <Button shape=\"circle\" icon={<GithubOutlined />} />\n                      </Tooltip>\n                  ]}\n                  onBack={handleMenu}\n              />\n              <Content>\n                  <Switch>\n                      <Route path=\"/about\">\n                          <AboutInformation />\n                      </Route>\n                      <Route path=\"/\">\n                          {renderCards()}\n                      </Route>\n                  </Switch>\n              </Content>\n              <Footer style={{textAlign: 'center'}}>\n                  Made with <HeartOutlined /> by asoul-button team\n              </Footer>\n              <Drawer\n                  title=\"A-soul按钮\"\n                  placement=\"left\"\n                  visible={drawerVisible}\n                  closable={false}\n                  onClose={toggleDrawer}\n              >\n                  <Button type=\"text\" block={true} style={{textAlign: 'left'}} onClick={toggleDrawer}>\n                      <Link to=\"/\">主页</Link>\n                  </Button>\n                  <Button type=\"text\" block={true} style={{textAlign: 'left'}} onClick={toggleDrawer}>\n                      <Link to=\"/about\">关于</Link>\n                  </Button>\n                  <Divider orientation=\"left\">链接</Divider>\n                  <Button type=\"link\" target=\"_blank\" href=\"https://space.bilibili.com/703007996\">A-SOUL_Official B站</Button>\n              </Drawer>\n          </Layout>\n      </Router>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}